class TableOfContents {
  constructor() {
    (this.headings = []),
      (this.tocContainers = [
        "#desktopTocList",
        "#mobileTocList",
        "#modalTocList",
      ]),
      (this.currentActive = null),
      this.init();
  }
  init() {
    this.generateTOC(),
      this.bindEvents(),
      this.updateReadingProgress(),
      this.highlightCurrentSection();
  }
  generateTOC() {
    document.querySelectorAll("h1, h2, h3").forEach((e, t) => {
      e.id || (e.id = `heading-${t}`),
        this.headings.push({
          element: e,
          id: e.id,
          text: e.textContent.trim(),
          level: parseInt(e.tagName.charAt(1)),
        });
    });
    let e = this.generateTOCHTML();
    this.tocContainers.forEach((t) => {
      let i = document.querySelector(t);
      i && (i.innerHTML = e);
    });
  }
  generateTOCHTML() {
    return this.headings
      .map((e) => {
        let t = e.level > 1 ? `level-${e.level}` : "";
        return `
                        <a href="#${e.id}"
                           class="toc-item ${t}"
                           data-target="${e.id}">
                            ${e.text}
                        </a>
                    `;
      })
      .join("");
  }
  bindEvents() {
    document.addEventListener("click", (e) => {
      if (e.target.classList.contains("toc-item")) {
        e.preventDefault();
        let t = e.target.getAttribute("data-target"),
          i = document.getElementById(t);
        if (i) {
          i.scrollIntoView({ behavior: "smooth", block: "start" });
          let n = bootstrap.Modal.getInstance(
            document.getElementById("tocModal")
          );
          n && n.hide();
          let s = document.getElementById("mobileTocContent");
          s &&
            s.classList.contains("show") &&
            bootstrap.Collapse.getInstance(s).hide();
        }
      }
    });
    let e = !1;
    window.addEventListener("scroll", () => {
      e ||
        (requestAnimationFrame(() => {
          this.highlightCurrentSection(),
            this.updateReadingProgress(),
            (e = !1);
        }),
        (e = !0));
    });
  }
  highlightCurrentSection() {
    let e = window.scrollY + 100,
      t = null;
    for (let i = this.headings.length - 1; i >= 0; i--) {
      let n = this.headings[i];
      if (n.element.offsetTop <= e) {
        t = n.id;
        break;
      }
    }
    t !== this.currentActive &&
      (document.querySelectorAll(".toc-item").forEach((e) => {
        e.classList.remove("active");
      }),
      t &&
        document.querySelectorAll(`[data-target="${t}"]`).forEach((e) => {
          e.classList.add("active");
        }),
      (this.currentActive = t));
  }
  updateReadingProgress() {
    let e = document.querySelector(".post-content");
    if (!e) return;
    let t = e.offsetTop,
      i = e.offsetHeight,
      n = window.innerHeight,
      s = window.scrollY;
    document.getElementById("readingProgress").style.width =
      100 * Math.min(Math.max((s - t + n) / i, 0), 1) + "%";
  }
}
function bootstrapTable() {
  document.querySelectorAll(".post-content table").forEach((e) => {
    e.classList.add("table", "table-dark");
  });
}
function copyLink() {
  navigator.clipboard.writeText(window.location.href).then(() => {
    let e = document.createElement("div");
    (e.className =
      "alert alert-success position-fixed top-0 start-50 translate-middle-x mt-3"),
      (e.style.zIndex = "1050"),
      (e.textContent = "Link copied!"),
      document.body.appendChild(e),
      setTimeout(() => {
        e.remove();
      }, 2e3);
  });
}
document.addEventListener("DOMContentLoaded", () => {
  bootstrapTable(), new TableOfContents();
});
